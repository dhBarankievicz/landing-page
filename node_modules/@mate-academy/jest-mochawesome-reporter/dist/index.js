"use strict";var e=require("fs"),t=require("path"),s=require("uuid"),i=require("@jest/reporters");class r extends i.BaseReporter{constructor(e,t){super(),this.globalConfig=e,this.options={outputDir:this.globalConfig.rootDir,createDirIfMissing:!1,outputName:"jest-mochawesome",...t}}onRunComplete(e,t){try{if(!t)return void this.log("No test results available. Exiting...");const e=this.buildReport(t);this.writeReport(e)}catch(e){this.log("An error occurred while generating the report:",e)}}writeReport(e){const{outputDir:t,outputName:s,createDirIfMissing:i}=this.options;this.writeOutput(e,`${t}/${s}.json`,i)}buildElapsedTime(e){return e.reduce(((e,t)=>e+t.testResults.reduce(((e,t)=>{var s;return e+(null!==(s=t.duration)&&void 0!==s?s:0)}),0)),0)}writeOutput(s,i,r){const u=JSON.stringify(s);if(r){const s=t.dirname(i);e.existsSync(s)||e.mkdirSync(s,{recursive:!0})}e.writeFile(i,u,"utf8",(e=>{if(e)throw e;this.log(`Test results written to ${i}`)}))}getFullTitle(e){return e.ancestorTitles.reduce(((e,t)=>t?`${e}${t} > `:e),"")+e.title}isPending(e){return"pending"===e.status}isPassed(e){return"passed"===e.status}isFailed(e){return"failed"===e.status}createTest(e,t){const i=this.isPassed(e),r=this.isFailed(e),u=this.isPending(e);return{title:this.getFullTitle(e),fullTitle:e.fullName,timedOut:!1,duration:e.duration||0,pass:i,fail:r,pending:u,code:"",uuid:s.v4(),parentUUID:t,skipped:!1,isHook:!1,err:r?this.getErrorLogForTest(e):{}}}removeANSIEscapeCodes(e){return e.replace(/\x1B\[[0-9;]*[A-Za-z]/g,"")}getErrorLogForTest(e){const t={message:"Test failed (click to view stacktrace)",estack:""};return e.failureMessages&&e.failureMessages.length>0&&(t.estack=this.removeANSIEscapeCodes(e.failureMessages[0])),t}createSuite(e){const t=s.v4(),i=e.testResults.map((e=>this.createTest(e,t))),{passes:r,failures:u,pending:a}=i.reduce(((e,t)=>(t.pass?e.passes.push(t.uuid):t.fail?e.failures.push(t.uuid):t.pending&&e.pending.push(t.uuid),e)),{passes:[],failures:[],pending:[]});return{title:e.testResults[0].ancestorTitles[0],suites:[],tests:i,pending:a,root:!1,uuid:t,_timeout:5e3,fullFile:e.testFilePath,file:e.testFilePath.split("/").pop()||"",beforeHooks:[],afterHooks:[],passes:r,failures:u,skipped:[],duration:e.perfStats.end-e.perfStats.start}}buildReport(e){const t=this.buildElapsedTime(e.testResults),s=e.testResults.map((e=>this.createSuite(e)));return{stats:{suites:e.numTotalTestSuites,tests:e.numTotalTests,testsRegistered:e.numTotalTests,passes:e.numPassedTests,pending:e.numPendingTests,failures:e.numFailedTests,start:new Date(e.startTime),end:new Date(e.startTime+t),duration:t,passPercent:e.numPassedTests/e.numTotalTests*100,pendingPercent:e.numPendingTests/e.numTotalTests*100,other:0,hasOther:!1,skipped:0,hasSkipped:!1},results:s}}log(e,...t){console.log(e,...t)}}module.exports=r;
